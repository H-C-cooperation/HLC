"""
Django settings for HNC_server project.

Generated by 'django-admin startproject' using Django 4.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-2goql(-cm*j2c78u-2ysoixyy_!ycb03_hu1#z!7axtoi!$+@n'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # APP
    'accounts',
    'movies',
    
    
    # 편의 기능
    'django_extensions', # extensions (자동완성 + shell_plus) + rest API
    # DRF
    'rest_framework', # Django REST framework, 웹 API 개발을 위한 도구
    'rest_framework.authtoken', # Token-based authentication을 위한 도구

    # REST_AUTH
    'dj_rest_auth', # REST API를 위한 인증 라이브러리
    'allauth', # Django 프로젝트를 위한 통합 인증 애플리케이션
    'allauth.account', # allauth의 계정 관리를 위한 도구
    'dj_rest_auth.registration', # dj-rest-auth의 회원가입 기능을 위한 확장 도구

    # social login 필요 시 추가
    'django.contrib.sites', # allauth 사용을 위해 필요
    'allauth.socialaccount', # social 로그인 확장 도구
    
    # 기본 설정
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

SITE_ID = 1

ACCOUNT_EMAIL_VERIFICATION = 'none'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # all auth
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'HNC_server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'HNC_server.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# 유저 커스텀한 유저를 사용하기 위한 작업2
AUTH_USER_MODEL='accounts.User'

# django-rest-framework 설정
REST_FRAMEWORK = {
    # Authentication
    # 기본 인증을 기본 Token으로 설정
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],

    # 인증 받은 사용자에게만 요청 허용
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.AllowAny',  # => 기본적으로 모두에게 허용 (설정 안할시 기본값)
        'rest_framework.permissions.IsAuthenticated', # => 기본적으로 인증받아야 사용 : 우리 프로젝트는 인증받은 사용자에게만 모든 정보를 줄 것이므로 이를 기본값으로 설정 후 view 함수 위 에 decorator를 안 달꺼임
    ]
}
